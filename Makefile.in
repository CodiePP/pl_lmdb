#   Prolog Interface to LMDB
#   Copyright (C) 2021  Alexander Diemand
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.

SWIPL = swipl
GPLC = gplc

LINK = @CC@

RANLIB = @RANLIB@

SWI_CFLAGS = @LMDB_CFLAGS@ @SWI_CFLAGS@
SWI_LDLIBS = @LMDB_LIBS@ @SWI_LIBS@
SWI_LDFLAGS = -shared
GP_CFLAGS = @LMDB_CFLAGS@
GP_LDLIBS = @LMDB_LIBS@

# module name
MNAME = @PACKAGE_NAME@
MODULE = @PACKAGE_NAME@-@ARCH@

SRCDIR = src
OBJDIR = obj-@ARCH@

GP_SRCS = $(SRCDIR)/gp-lmdb.pl $(SRCDIR)/gp-lmdb-c.c $(SRCDIR)/lmdb_flags.pl
GP_OBJS = $(OBJDIR)/gp-lmdb.gpo $(OBJDIR)/gp-lmdb-c.gpo

# object files
SWI_OBJS = $(OBJDIR)/swi-lmdb-c.o

.SUFFIXES: .c

# other implicit rules
$(OBJDIR)/%.o : $(SRCDIR)/%.c
	@echo "compiling $<"
	$(CC) -c @CFLAGS@ $(SWI_CFLAGS) @DEFS@ -o $@ $<

$(OBJDIR)/%.gpo : $(SRCDIR)/%.pl
	@echo "compiling $<"
	$(GPLC) -c -o $@ $<

$(OBJDIR)/%.gpo : $(SRCDIR)/%.c
	@echo "compiling $<"
	$(GPLC) -c -C "$(GP_CFLAGS) " -C @DEFS@ -o $@ $<

$(SRCDIR)/%.qlf : $(SRCDIR)/%.pl
	@echo "compiling $<"
	$(SWIPL) -q -t "asserta(file_search_path(sbcl,'.')), qcompile(\"$<\")."


# rule to make it all
all: swi gp
swi: $(MODULE) $(SRCDIR)/lmdb.qlf $(SRCDIR)/lmdb_flags.pl
gp: lib$(MODULE).a top.gp

$(SRCDIR)/lmdb.qlf: $(SRCDIR)/lmdb_flags.pl $(SRCDIR)/lmdb.pl
$(GP_OBJS) : $(GP_SRCS)

# builds the executable
$(MODULE): $(OBJDIR) $(SWI_OBJS)
	@echo "Building module $(MODULE)"
	$(LINK) $(SWI_LDFLAGS) -o $(MODULE) $(SWI_OBJS) $(SWI_LDLIBS)
	ln -sf $(MODULE) $(MNAME)
lib$(MODULE).a: $(OBJDIR) $(GP_OBJS)
	@echo "Building library $(MODULE)"
	$(AR) -r -c $@ $(GP_OBJS)
	$(RANLIB) $@
top.gp: $(GP_OBJS) lib$(MODULE).a
	@echo "Building GNU Prolog top"
	$(GPLC) -o $@ --new-top-level src/gp-lmdb.pl lib$(MODULE).a -L "$(GP_LDLIBS)"

check:
	@echo "testing using SWI Prolog"
	swipl -l test/t3.pl -g test
	swipl -l test/t4.pl -g test
	@rm -f data.mdb lock.mdb
	@echo "testing using GNU Prolog"
	$(GPLC) -o t3.gp --global-size 500000 --trail-size 100000 test/t3_gp.pl test/t3.pl lib$(MODULE).a -L "$(GP_LDLIBS)"
	$(GPLC) -o t4.gp --global-size 500000 --trail-size 100000 test/t4_gp.pl test/t4.pl lib$(MODULE).a -L "$(GP_LDLIBS)"
	$(GPLC) -o t5.gp --global-size 500000 --trail-size 100000 test/t5_gp.pl test/t5.pl lib$(MODULE).a -L "$(GP_LDLIBS)"
	./t3.gp
	./t4.gp
	@rm -f data.mdb lock.mdb

clean:
	@echo "Cleaning away everything."
	@test -d $(OBJDIR) && rm -r $(OBJDIR); true
	@test -f $(MODULE) && rm $(MODULE); true
	@rm -f $(MNAME); true
	@rm -f $(SRCDIR)/lmdb.qlf; true
	@rm -f top.gp; true
	@rm -f t[345].gp; true
	@test -f lib$(MODULE).a && rm lib$(MODULE).a; true

$(OBJDIR):
	@mkdir $(OBJDIR)

